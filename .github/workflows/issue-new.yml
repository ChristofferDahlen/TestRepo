name: "Issue: New"

on:
  issues:
    types: [opened]

env:
  EMPTY_TITLE_COMMENT: Seems like you have forgotten to fill out the title of the issue. Please fill it in properly.
  EMPTY_BODY_COMMENT: Seems like you have forgotten to fill out the description of the issue. Please fill it in properly
  OPENING_COMMENT: |
          Thanks for opening this issue!
          I have applied labels matching the template and attempted to move the issue to the correct repository. 

          Please review if this is correct. 

          If the issue has been moved to the wrong repositorty it can be moved again after 5min by removing all Product labels and setting the correct ones.



  PROTECTED_JSON: '{ "Product - POMA\\b" : "true" }'
  TRANSFER_MAP: '{ 
          "Product - POMA\\b" : "labelOnPRReview",
          "Product - Gateway\\b" : "testRepo",
          "Product - POM\\b" : "testRepo",
          "Product - POH\\b" : "testRepo",
          "Product - Spotbid\\b" : "false",
          "Product - Connecting Shop\\b" : "testRepo",
          "Product - Connecting Prodrisk\\b" : "testRepo",
          "Product - Optimal Log\\b" : "testRepo"
        }'
  BOARD_MAP: '{ 
          "Product - Connecting Shop\\b" : "Connecting Shop Board",
          "Product - Connecting Prodrisk\\b" : "Connecting Shop Board",
          "Product - POMA\\b" : "Optimisation Core Board",
          "Product - Gateway\\b" : "Optimisation Core Board",
          "Product - POM\\b" : "Optimisation Core Board",
          "Product - POH\\b" : "Optimisation Core Board",
          "Product - Spotbid\\b" : "Optimisation Core Board",
          "Product - Optimal Log\\b" : "Optimisation Core Board"
        }'

  

jobs:


########
## Adding other labels
########

  Check_Status:
    name: Check_Status
    if: ${{ !github.event.issue.locked && github.event.issue.state != 'closed' }}
    runs-on: ubuntu-latest
    steps:
    - name: Get Current Issue State
      uses: octokit/request-action@v2.x
      id: get_state
      with:
        route: GET /repos/${{ github.repository}}/issues/${{github.event.issue.number}}      
      env:
        GITHUB_TOKEN: ${{ secrets.OPT_GH_TOKEN }}
    outputs:
      status: ${{ fromJson(steps.get_state.outputs.data).state }}

  Add_Labels:
    name: Add labels
    if: ${{ needs.Check_Status.outputs.status == 'open'}}
    runs-on: ubuntu-latest
    needs: Check_Status
    steps:
    - name: Get Current Issue State
      uses: octokit/request-action@v2.x
      id: get_state
      with:
        route: GET /repos/${{ github.repository}}/issues/${{github.event.issue.number}}      
      env:
        GITHUB_TOKEN: ${{ secrets.OPT_GH_TOKEN }}
    - uses: actions/checkout@v2
      if: fromJson(steps.get_state.outputs.data).state == 'open'
      name: Checkout
    - uses: Resnovas/label-mastermind@2.1.3
      if: fromJson(steps.get_state.outputs.data).state == 'open'
      name: Labeling
      with:
        GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN  }}'
    - name: Add_Other_Labels
      if: fromJson(steps.get_state.outputs.data).state == 'open'
      id: labeler
      uses: jimschubert/labeler-action@v1
      with:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}



########          
## Check if the issue should be transfered to another repo
########
  transfer_issue:
    name: Tranfser issue
    needs: Add_Labels
    runs-on: ubuntu-latest
    steps:
    - name: Get Current Issue State
      uses: octokit/request-action@v2.x
      id: get_body
      with:
        route: GET /repos/${{ github.repository}}/issues/${{github.event.issue.number}}      
      env:
        GITHUB_TOKEN: ${{ secrets.OPT_GH_TOKEN }}
        

    - name: Check Protection
      id: protect
      uses: ChristofferDahlen/Multi-Regex-Match@v1.0
      with:
        input: "${{toJson(fromJson(steps.get_body.outputs.data).labels.*.name) }}"
        json_match: ${{ env.PROTECTED_JSON }}

    - name: Check Labels
      id: match
      uses: ChristofferDahlen/Multi-Regex-Match@v1.0
      with:
        input: "${{ toJson(fromJson(steps.get_body.outputs.data).labels.*.name) }}"
        json_match: ${{ env.TRANSFER_MAP }}
    - uses: actions-ecosystem/action-create-comment@v1
      if: ${{ steps.match.outputs.result == 'false' || steps.match.outputs.result == '' }}
      with:
        github_token: ${{ secrets.github_token }}
        body: |
          @${{github.event.issue.user.login}} The automation wasn't able to determine which repository this issue belongs to.
    - run: |
          if [[ "${{ steps.protect.outputs.result}}" == "true" || "${{fromJson(steps.get_body.outputs.data).state}}" == "closed" ||"${{github.repository_owner}}/${{ steps.match.outputs.result }}" == "${{ github.repository }}" ||  "${{ steps.match.outputs.result }}" == "" || "${{ steps.match.outputs.result }}" == "false"  ]]
          then
            echo ::set-output name=remain::true
          else
            echo ::set-output name=remain::false
          fi
      shell: bash
      name: Check if we should move from ${{ github.repository }} to ${{ steps.match.outputs.result }}
      id: state

    - name: Transfer Issue & Comment
      if: steps.state.outputs.remain == 'false'
      uses: christofferDahlen/transfer-issue-action@v3
      with:
        target_repo: ${{ steps.match.outputs.result }}
        token: '${{ secrets.OPT_GH_TOKEN }}'
        debug: true
        create_stub: true
    outputs:
      remain: ${{ steps.state.outputs.remain }}

  Add_Comment:
    name: Add Comment
    runs-on: ubuntu-latest
    needs: [Check_Status,transfer_issue]
    if: needs.Check_Status.outputs.status == 'open' && needs.transfer_issue.outputs.remain == 'true'
    steps:
    - uses: octokit/request-action@v2.x
      id: get_body
      with:
        route: GET /repos/${{ github.repository}}/issues/${{github.event.issue.number}}/comments     
      env:
        GITHUB_TOKEN: ${{ secrets.OPT_GH_TOKEN }}
    - uses: actions-ecosystem/action-create-comment@v1
      if: ${{ !contains(toJson(fromJson(steps.get_body.outputs.data).*.body), env.OPENING_COMMENT)}}
      with:
        github_token: ${{ secrets.github_token }}
        body: ${{ env.OPENING_COMMENT }}

########
## Check if the title is correct 
########

  check_title:
    name: Check Empty title 
    needs: [Check_Status,transfer_issue]
    if: needs.Check_Status.outputs.status == 'open' && needs.transfer_issue.outputs.remain == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: octokit/request-action@v2.x
      id: get_body
      with:
        route: GET /repos/${{ github.repository}}/issues/${{github.event.issue.number}}/comments     
      env:
        GITHUB_TOKEN: ${{ secrets.OPT_GH_TOKEN }}
    - uses: actions-ecosystem/action-regex-match@v2
      id: regex-match
      with:
        text: ${{ github.event.issue.title }}
        regex: '^(\[[^\]]*\]:?\s*(title)?)?$'
        flags: gm
    - uses: actions-ecosystem/action-create-comment@v1
      if: ${{ steps.regex-match.outputs.match != '' && !contains(toJson(fromJson(steps.get_body.outputs.data).*.body), env.EMPTY_TITLE_COMMENT)}}
      with:
        github_token: ${{ secrets.github_token }}
        body: |
          @${{github.event.issue.user.login}} ${{ env.EMPTY_TITLE_COMMENT }}

  check_body:
    name: Check Empty body
    needs: [Check_Status,transfer_issue]
    if: needs.Check_Status.outputs.status == 'open' && needs.transfer_issue.outputs.remain == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: octokit/request-action@v2.x
      id: get_body
      with:
        route: GET /repos/${{ github.repository}}/issues/${{github.event.issue.number}}      
      env:
        GITHUB_TOKEN: ${{ secrets.OPT_GH_TOKEN }}
    - uses: octokit/request-action@v2.x
      id: get_comment
      with:
        route: GET /repos/${{ github.repository}}/issues/${{github.event.issue.number}}/comments     
      env:
        GITHUB_TOKEN: ${{ secrets.OPT_GH_TOKEN }}

    - uses: actions-ecosystem/action-create-comment@v1
      if: ${{ fromJson(steps.get_body.outputs.data).body == '' !contains(toJson(fromJson(steps.get_body.outputs.data).*.body), env.EMPTY_BODY_COMMENT)}}
      with:
        github_token: ${{ secrets.github_token }}
        body: |
          @${{github.event.issue.user.login}} ${{env.EMPTY_BODY_COMMENT}}




########
## Add issue to the appropriate 
########

  Add_To_Project:
    name: Add to project
    needs: [transfer_issue, Check_Status]
    if: needs.Check_Status.outputs.status == 'open' && needs.transfer_issue.outputs.remain == 'true'
    runs-on: ubuntu-latest
    steps: 
    - uses: octokit/request-action@v2.x
      id: get_body
      with:
        route: GET /repos/${{ github.repository}}/issues/${{github.event.issue.number}}      
      env:
        GITHUB_TOKEN: ${{ secrets.OPT_GH_TOKEN }}

    - name: Match body
      id: match
      uses: ChristofferDahlen/Multi-Regex-Match@v1.0
      with:
        input: "${{ toJson(fromJson(steps.get_body.outputs.data).labels.*.name) }}"
        json_match: ${{ env.BOARD_MAP }}

    - uses: alex-page/github-project-automation-plus@v0.8.1
      if: ${{ steps.match.outputs.result != ''}} 
      id: add-to-project
      with:
        project: ${{ steps.match.outputs.result }} 
        column: Triage
        repo-token: '${{ secrets.OPT_GH_TOKEN }}'
    
    - uses: actions-ecosystem/action-create-comment@v1
      if: ${{ steps.add-to-project.outcome != 'success' }}
      with:
        github_token: ${{ secrets.github_token }}
        body: |
          @${{github.event.issue.user.login}} The automation hasn't been able to add this to a appropriate project. This could lead to the issue not being handled.

          Please add it to a appropraite project or close the issue and open a new one with either 
          1. A template correctly filled out
          2. A issue with a set product label